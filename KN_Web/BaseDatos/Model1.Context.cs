//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KN_Web.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MARTES_BDEntities1 : DbContext
    {
        public MARTES_BDEntities1()
            : base("name=MARTES_BDEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contacto> Contacto { get; set; }
        public virtual DbSet<tCarrito> tCarrito { get; set; }
        public virtual DbSet<tCategoria> tCategoria { get; set; }
        public virtual DbSet<tDetalle> tDetalle { get; set; }
        public virtual DbSet<tFavoritos> tFavoritos { get; set; }
        public virtual DbSet<tMaestro> tMaestro { get; set; }
        public virtual DbSet<tProducto> tProducto { get; set; }
        public virtual DbSet<tRol> tRol { get; set; }
        public virtual DbSet<tUsuario> tUsuario { get; set; }
    
        public virtual int ActualizarImagenProducto(Nullable<int> idProducto, string imagen)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImagenProducto", idProductoParameter, imagenParameter);
        }
    
        public virtual int ActualizarProducto(string descripcion, Nullable<int> inventario, Nullable<decimal> precio, string imagen, Nullable<int> idCategoria, Nullable<int> idProducto)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", descripcionParameter, inventarioParameter, precioParameter, imagenParameter, idCategoriaParameter, idProductoParameter);
        }
    
        public virtual int ActualizarUsuario(string identificacion, string nombre, string correo, Nullable<byte> idRol, Nullable<int> consecutivo)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(byte));
    
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuario", identificacionParameter, nombreParameter, correoParameter, idRolParameter, consecutivoParameter);
        }
    
        public virtual int AgregarFavorito(Nullable<int> consecutivo, Nullable<int> idProducto)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarFavorito", consecutivoParameter, idProductoParameter);
        }
    
        public virtual int CambiarEstadoUsuario(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoUsuario", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarCarrito_Result> ConsultarCarrito(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCarrito_Result>("ConsultarCarrito", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarDetalleFactura_Result> ConsultarDetalleFactura(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetalleFactura_Result>("ConsultarDetalleFactura", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarFacturas_Result> ConsultarFacturas(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFacturas_Result>("ConsultarFacturas", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarFavoritos_Result> ConsultarFavoritos(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFavoritos_Result>("ConsultarFavoritos", consecutivoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductos_Result> ConsultarProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductos_Result>("ConsultarProductos");
        }
    
        public virtual ObjectResult<ConsultarVentasMensuales_Result> ConsultarVentasMensuales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarVentasMensuales_Result>("ConsultarVentasMensuales");
        }
    
        public virtual int EliminarFavorito(Nullable<int> idFavorito)
        {
            var idFavoritoParameter = idFavorito.HasValue ?
                new ObjectParameter("IdFavorito", idFavorito) :
                new ObjectParameter("IdFavorito", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarFavorito", idFavoritoParameter);
        }
    
        public virtual int EliminarProductoCarrito(Nullable<int> consecutivo, Nullable<int> idProducto)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProductoCarrito", consecutivoParameter, idProductoParameter);
        }
    
        public virtual ObjectResult<IniciarSesion_Result> IniciarSesion(string correo, string contrasenna)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesion_Result>("IniciarSesion", correoParameter, contrasennaParameter);
        }
    
        public virtual int PagarCarrito(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagarCarrito", consecutivoParameter);
        }
    
        public virtual int RegistrarCarrito(Nullable<int> consecutivo, Nullable<int> idProducto, Nullable<int> cantidad)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCarrito", consecutivoParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RegistrarProducto(string descripcion, Nullable<int> inventario, Nullable<decimal> precio, string imagen, Nullable<int> idCategoria)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var inventarioParameter = inventario.HasValue ?
                new ObjectParameter("Inventario", inventario) :
                new ObjectParameter("Inventario", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RegistrarProducto", descripcionParameter, inventarioParameter, precioParameter, imagenParameter, idCategoriaParameter);
        }
    
        public virtual int RegistrarUsuario(string identificacion, string nombre, string correo, string contrasenna)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", identificacionParameter, nombreParameter, correoParameter, contrasennaParameter);
        }
    
        public virtual ObjectResult<ValidarExistencias_Result> ValidarExistencias(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarExistencias_Result>("ValidarExistencias", consecutivoParameter);
        }
    
        public virtual ObjectResult<ValidarUsuarioIdentificacion_Result> ValidarUsuarioIdentificacion(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarUsuarioIdentificacion_Result>("ValidarUsuarioIdentificacion", identificacionParameter);
        }
    
        public virtual int sp_FiltrarProductosPorCategoria(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FiltrarProductosPorCategoria", idCategoriaParameter);
        }
    
        public virtual int EliminarUsuarios(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuarios", idUsuarioParameter);
        }
    
        public virtual int EliminarUsuarios1(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuarios1", idUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GenerarReciboPago(Nullable<int> idTransaccion, string rutaArchivoPDF)
        {
            var idTransaccionParameter = idTransaccion.HasValue ?
                new ObjectParameter("IdTransaccion", idTransaccion) :
                new ObjectParameter("IdTransaccion", typeof(int));
    
            var rutaArchivoPDFParameter = rutaArchivoPDF != null ?
                new ObjectParameter("RutaArchivoPDF", rutaArchivoPDF) :
                new ObjectParameter("RutaArchivoPDF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GenerarReciboPago", idTransaccionParameter, rutaArchivoPDFParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GuardarCuentaPago(Nullable<int> consecutivo, Nullable<int> idMetodoPago, string identificadorCuenta, string ultimosCuatroDigitos)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var idMetodoPagoParameter = idMetodoPago.HasValue ?
                new ObjectParameter("IdMetodoPago", idMetodoPago) :
                new ObjectParameter("IdMetodoPago", typeof(int));
    
            var identificadorCuentaParameter = identificadorCuenta != null ?
                new ObjectParameter("IdentificadorCuenta", identificadorCuenta) :
                new ObjectParameter("IdentificadorCuenta", typeof(string));
    
            var ultimosCuatroDigitosParameter = ultimosCuatroDigitos != null ?
                new ObjectParameter("UltimosCuatroDigitos", ultimosCuatroDigitos) :
                new ObjectParameter("UltimosCuatroDigitos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GuardarCuentaPago", consecutivoParameter, idMetodoPagoParameter, identificadorCuentaParameter, ultimosCuatroDigitosParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertarMetodoPago(string nombre, string descripcion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertarMetodoPago", nombreParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RegistrarTransaccionPago(Nullable<int> consecutivo, Nullable<int> idMaestro, Nullable<int> idMetodoPago, Nullable<decimal> montoTotal, string estadoPago, string codigoTransaccion)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            var idMaestroParameter = idMaestro.HasValue ?
                new ObjectParameter("IdMaestro", idMaestro) :
                new ObjectParameter("IdMaestro", typeof(int));
    
            var idMetodoPagoParameter = idMetodoPago.HasValue ?
                new ObjectParameter("IdMetodoPago", idMetodoPago) :
                new ObjectParameter("IdMetodoPago", typeof(int));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("MontoTotal", montoTotal) :
                new ObjectParameter("MontoTotal", typeof(decimal));
    
            var estadoPagoParameter = estadoPago != null ?
                new ObjectParameter("EstadoPago", estadoPago) :
                new ObjectParameter("EstadoPago", typeof(string));
    
            var codigoTransaccionParameter = codigoTransaccion != null ?
                new ObjectParameter("CodigoTransaccion", codigoTransaccion) :
                new ObjectParameter("CodigoTransaccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RegistrarTransaccionPago", consecutivoParameter, idMaestroParameter, idMetodoPagoParameter, montoTotalParameter, estadoPagoParameter, codigoTransaccionParameter);
        }
    
        public virtual ObjectResult<sp_FiltrarProductosPorCategoria1_Result> sp_FiltrarProductosPorCategoria1(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_FiltrarProductosPorCategoria1_Result>("sp_FiltrarProductosPorCategoria1", idCategoriaParameter);
        }
    
        public virtual int GenerarFacturaConCarrito(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarFacturaConCarrito", consecutivoParameter);
        }
    
        public virtual ObjectResult<ObtenerFacturaPorId_Result> ObtenerFacturaPorId(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("IdFactura", idFactura) :
                new ObjectParameter("IdFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerFacturaPorId_Result>("ObtenerFacturaPorId", idFacturaParameter);
        }
    
        public virtual ObjectResult<ValidarExistencias1_Result> ValidarExistencias1(Nullable<int> consecutivo)
        {
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("Consecutivo", consecutivo) :
                new ObjectParameter("Consecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidarExistencias1_Result>("ValidarExistencias1", consecutivoParameter);
        }
    
        public virtual int sp_EliminarProducto(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarProducto", idProductoParameter);
        }
    }
}
